
docker version
:Client, Server의 버전 및 상태 확인 

docker info
:플러그인, 시스템 상세 정보 확인 

docker --help
:메뉴얼 확인

docker 부분류 소분류

docker run(실행옵션) 이미지명
: 컨테이너 실행
  docker run -p 80:80 --name hellonginx nginx(이미지명) 

docker rm 컨테이너명/ID
: 컨터이너 삭제

docker image ls(이미지명)
: 로컬 이미지 조회

                       #이미지 ID 
REPOSITORY   TAG       IMAGE ID       CREATED       SIZE
nginx        latest    bc5eac5eafc5   6 weeks ago   279MB

docker run -d --name {컨테이너명} 이미지명 
docker run -d --name multinginx3 nginx

CONTAINER ID   IMAGE     COMMAND                   CREATED              STATUS              PORTS     NAMES
79ef1bf4772b   nginx     "/docker-entrypoint.…"   4 seconds ago        Up 4 seconds        80/tcp    multinginx3
3a23b82cbf87   nginx     "/docker-entrypoint.…"   8 seconds ago        Up 7 seconds        80/tcp    multinginx2
b817dee43055   nginx     "/docker-entrypoint.…"   About a minute ago   Up About a minute   80/tcp    multinginx1


# 실행된 Docker name으로 지우는 방법
docker rm -f multinginx1 multinginx2 multinginx3

docker ps
: 실행중인 docker 조회


docker image inspect 이미지명
: 이미지의 세부 정보 조회

docker container inspect 컨테이너명
: 컨테이너의 세부 정보 조회

docker run 이미지명 (실행명령)
: 컨테이너 실행 시 메타데이터의 cmd 덮어쓰기 

docker run --env KEY=VALUE 이미지명
: 컨테이너 실행 시 메타데이터의 env 덮어쓰기 

docker run [OPTIONS] IMAGE [COMMAND] [ARG...]

docker run --name customCmd nginx
cat usr/share/nginx/html/index.html

cat 파일경로 # 리눅스 
: 파일의 내용 출력


docker run -d 이미지명  

-d 옵션 추가 시 
: 지속적으로 실행되는 데몬 프로그램을 실행할떄 적합

-d 옵션 제거 시 
: 실행 후 종료되는 프로그램에 적합, 실시간으로 로그를 확인할 경우 

# 실습용 이미지 다운로드
docker pull devwikirepo/envnodecolorapp

docker ps -a
: 모든 컨테이너 조회

docker rm -f 컨테이너 이름 

docker logs(컨터이너명)
: 컨테이너의 로그 조회
 
docker create --name tencounter1 devwikirepo/tencounter

docker start -i tenceounter1 # 컨테이너를 실행 및 (출력) 연결

docker run --name hundredcounter1 devwikirpo/hundredcounter

docker run --name hundredcounter devwikirepo/hundredcounter

docker run -d -p 80:80 --name hellonginx nginx

docker pull 이미지명
: 로컬 스토리지로 이미지 다운로드

docker tag 기존이미지명 추가할이미지명
: 로컬스토리지의 이미지명 추가

docker push 이미지명
: 이미지 레지스트리에 이미지 업로드

docker login
: 이미지 레지스트리 인증 정보 생성

docker logout
: 이미지 레지스트리 인증 정보 삭제

docker image rm 이미지명 
: 로컬 스토리지의 이미지 삭제 

docker image history 이미지명
: 이미지의 레이어 이력 조회

docker run -it --name 컨테이너명 이미지명 bin/bash
: 컨테이너 실행과 동시에 터미널 접속

docker commit -m 커밋명 실행중인컨테이너명 생성할이미지명
: 실행 중인 컨테이너를 이미지로 생성 

docker commit -m "edited index.html" -c'CMD["nginx","-g","daemon off;"]' officialNginx 레지스트리계정명/commitnginx
: 실행 중인 officialNginx 컨테이너를 이미지로 커밋 

      docker image ls wldygus/commitnginx # 생성된 이미지 확인 

docker build -t 이미지명 Dockerfile 경로
: 도커 파일을 통해 이미지 빌드 

FROM 이미지명
: 베이스 이미지를 지정

COPY 파일경로 복사할 경로
: 파일을 레이어에 복사

CMD ["명령어"]
: 컨테이너 실행 시 명령어 지정 

